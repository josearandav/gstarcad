package com.gstarcad.website.entity;import java.util.Date;import java.util.List;import javax.persistence.CascadeType;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.Id;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.Table;import javax.persistence.Transient;/** * 电商价格* @ClassName: EcPrice * @Description: TODO(这里用一句话描述这个类的作用) * @author fengzf fengzf@gstarcad.com   * @date Mar 16, 2018 2:55:07 PM * @version Vxxx (项目版本)* @redmine #xxx (redmine中的#编号)   * @update @Description TODO(这里用一句话描述这个方法的作用) * @update @author fengzf fengzf@gstarcad.com   * @update @date Mar 16, 2018 2:55:07 PM */@Entity@Table(name = "ec_price")public class EcPrice implements java.io.Serializable {	//field	/**  **/	@Id	@GeneratedValue(strategy = GenerationType.AUTO)	@Column(name = "id")	private Long id;		/** 价格名称 **/	private String name;		/**图标 **/	@Column(name = "thumb_img")	private String thumbImg;		/** 是否促销：0、否；1、是 **/	@Column(name = "is_sale")	private Integer isSale;		/** 价格 **/	private Double price;		/** 促销价格 **/	private Double formerprice;		/**购买Url**/	@Column(name = "buy_url")	private String buyUrl;		/**升级价格**/	@Column(name = "upgrade_price")	private Double upgradePrice;		/** 升级促销价格 **/	@Column(name = "upgrade_formerprice")	private Double upgradeFormerprice;			/**升级Url**/	@Column(name = "upgrade_url")	private String upgradeUrl;			/**  **/	private Date createtime;		/** 是否删除：0、否；1、是 **/	private Integer isdelete;		/** 排序 **/	private Integer sort;		//产品	@ManyToOne(cascade = { CascadeType.REFRESH }, fetch = FetchType.EAGER)	@JoinColumn(name = "ec_id")	private Ecommerce ecommerce;	/*	@Where(clause="isdelete=1")	@OrderBy(value="sort asc,createtime desc")	@OneToMany(mappedBy = "EcPrice",fetch = FetchType.LAZY)	private List<PFeature> featureList;*/	@Transient	private List<PFeature> featureList;		public Long getId() {		return id;	}	public String getName() {		return name;	}	public String getThumbImg() {		return thumbImg;	}	public Integer getIsSale() {		return isSale;	}	public Double getPrice() {		return price;	}	public Double getFormerprice() {		return formerprice;	}	public Date getCreatetime() {		return createtime;	}	public Integer getIsdelete() {		return isdelete;	}	public Ecommerce getEcommerce() {		return ecommerce;	}	public void setId(Long id) {		this.id = id;	}	public void setName(String name) {		this.name = name;	}	public void setThumbImg(String thumbImg) {		this.thumbImg = thumbImg;	}	public void setIsSale(Integer isSale) {		this.isSale = isSale;	}	public void setPrice(Double price) {		this.price = price;	}	public void setFormerprice(Double formerprice) {		this.formerprice = formerprice;	}	public void setCreatetime(Date createtime) {		this.createtime = createtime;	}	public void setIsdelete(Integer isdelete) {		this.isdelete = isdelete;	}	public void setEcommerce(Ecommerce ecommerce) {		this.ecommerce = ecommerce;	}	public List<PFeature> getFeatureList() {		return featureList;	}	public void setFeatureList(List<PFeature> featureList) {		this.featureList = featureList;	}	public Double getUpgradePrice() {		return upgradePrice;	}	public Double getUpgradeFormerprice() {		return upgradeFormerprice;	}	public void setUpgradePrice(Double upgradePrice) {		this.upgradePrice = upgradePrice;	}	public void setUpgradeFormerprice(Double upgradeFormerprice) {		this.upgradeFormerprice = upgradeFormerprice;	}	public Integer getSort() {		return sort;	}	public void setSort(Integer sort) {		this.sort = sort;	}	public String getBuyUrl() {		return buyUrl;	}	public String getUpgradeUrl() {		return upgradeUrl;	}	public void setBuyUrl(String buyUrl) {		this.buyUrl = buyUrl;	}	public void setUpgradeUrl(String upgradeUrl) {		this.upgradeUrl = upgradeUrl;	}		}